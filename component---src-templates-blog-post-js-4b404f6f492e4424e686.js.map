{"version":3,"sources":["webpack:///./src/components/comment.js","webpack:///./src/templates/blog-post.js"],"names":["Comment","useEffect","j","e","document","getElementsByTagName","LivereTower","createElement","src","async","parentNode","insertBefore","console","log","id","data-id","data-uid","require","BlogPostTemplate","data","pageContext","post","location","markdownRemark","previous","next","Layout","title","frontmatter","description","excerpt","class","date","tags","map","tag","to","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel","pageQuery"],"mappings":"+JAuBeA,EArBC,WAed,OAdEC,qBAAU,WAEN,IAAIC,EAAGC,EAAIC,SAASC,qBAAqB,UAAU,GAEzB,mBAAhBC,eAEXJ,EAAIE,SAASG,cAAc,WACzBC,IAAM,+CACRN,EAAEO,OAAQ,EAEVN,EAAEO,WAAWC,aAAaT,EAAGC,GAC7BS,QAAQC,IAAI,iBAIf,yBAAKC,GAAG,eAAeC,UAAQ,OAAOC,WAAS,8B,UClBnD,0CAMAC,EAAQ,QA6DOC,UA3DU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAE1BC,GAFsD,EAAfC,SAEhCH,EAAKI,gBACVC,EAAmBJ,EAAnBI,SAAUC,EAASL,EAATK,KAElB,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CACEC,MAAON,EAAKO,YAAYD,MACxBE,YAAaR,EAAKS,UAEpB,6BAASC,MAAM,WACb,gCACE,wBAAIA,MAAM,wBAAwBV,EAAKO,YAAYD,OACnD,wBAAII,MAAM,sBAAsBV,EAAKO,YAAYI,MACjD,yBAAKD,MAAM,QACRV,EAAKO,YAAYK,KAAKC,KAAI,SAAAC,GAAG,OAC5B,kBAAC,OAAD,CAAMC,GAAI,QAAUD,EAAKJ,MAAM,iBAC5BI,QAKT,6BACA,6BAASE,wBAAyB,CAAEC,OAAQjB,EAAKkB,QACjD,8BAGF,6BACE,wBACEC,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGrB,GACC,kBAAC,OAAD,CAAMY,GAAI,QAAUZ,EAASsB,OAAOC,KAAMC,IAAI,QAA9C,KACKxB,EAASI,YAAYD,QAI9B,4BACGF,GACC,kBAAC,OAAD,CAAMW,GAAI,QAAUX,EAAKqB,OAAOC,KAAMC,IAAI,QACvCvB,EAAKG,YAAYD,MADpB,SAOR,kBAAC,EAAD,QAtDN,IA6DasB,EAAS","file":"component---src-templates-blog-post-js-4b404f6f492e4424e686.js","sourcesContent":["import React, {useEffect }  from \"react\"\n\nconst Comment = () => {\n    useEffect(() => {\n        // Update the document title using the browser API\n        var j, e = document.getElementsByTagName(\"script\")[0];\n\n       if (typeof LivereTower === 'function') { return; }\n\n       j = document.createElement(\"script\");\n       j.src = 'https://cdn-city.livere.com/js/embed.dist.js';\n       j.async = true;\n\n       e.parentNode.insertBefore(j, e);\n       console.log(\"test hook\")\n\n    });\n  return (\n    <div id=\"lv-container\" data-id=\"city\" data-uid=\"MTAyMC80ODc2MS8yNTI1NQ==\">\n    </div>\n  )\n}\n\nexport default Comment\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport SEO from \"../components/seo\"\nimport Layout from \"../components/Layout\"\nimport Comment from \"../components/comment\"\nimport \"../mystyles.scss\"\nrequire(`katex/dist/katex.min.css`)\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n\n  const post = data.markdownRemark\n  const { previous, next } = pageContext\n\n  return (\n    <Layout>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.excerpt}\n      />\n      <article class=\"content\">\n        <header>\n          <h1 class=\"title has-text-black\">{post.frontmatter.title}</h1>\n          <h6 class=\"subtitle is-spaced\">{post.frontmatter.date}</h6>\n          <div class=\"tags\">\n            {post.frontmatter.tags.map(tag => (\n              <Link to={\"/tag/\" + tag} class=\"tag is-spaced\">\n                {tag}\n              </Link>\n            ))}\n          </div>\n        </header>\n        <hr />\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr />\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={\"/blog\" + previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={\"/blog\" + next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <Comment />\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(truncate: true)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}