{"version":3,"sources":["webpack:///./src/templates/tag-posts.js","webpack:///./src/components/postcard.js"],"names":["BlogIndex","data","pageContext","posts","allMarkdownRemark","edges","title","class","targetTag","length","map","node","frontmatter","fields","slug","date","desc","excerpt","tags","pageQuery","PostCard","prop","key","style","boxShadow","to","dangerouslySetInnerHTML","__html","tag","className"],"mappings":"6FAAA,0HAgCeA,UAzBG,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,YAClBC,EAAQF,EAAKG,kBAAkBC,MAErC,OACI,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAKC,MAAM,cACX,wBAAIC,MAAM,wBAAV,mBAAiD,0BAAMA,MAAM,wBAAwBL,EAAYM,YACjG,uBAAGD,MAAM,YAAYJ,EAAMM,OAAS,UACpC,6BACCN,EAAMO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OACE,kBAAC,IAAD,CACER,MAAOA,EACPS,KAAMJ,EAAKC,YAAYG,KACvBC,KAAML,EAAKM,QACXC,KAAMP,EAAKC,YAAYM,KACvBJ,KAAMH,EAAKE,OAAOC,YAUvB,IAAMK,EAAS,a,oCClCtB,+CAiCeC,IA9BE,SAACC,GAEd,OACI,yBAAKd,MAAM,OACX,6BAASe,IAAKD,EAAKf,MAAOC,MAAM,WAE9B,gCACE,wBAAIA,MAAM,SACR,kBAAC,OAAD,CAAMgB,MAAO,CAAEC,UAAU,QAAWC,GAAI,QAAUJ,EAAKP,MACpDO,EAAKf,QAGV,wBAAIC,MAAM,YAAYc,EAAKN,OAE7B,iCACE,uBACEW,wBAAyB,CACvBC,OAAQN,EAAKL,UAKrB,yBAAKT,MAAM,QACRc,EAAKH,KAAKR,KAAI,SAAAkB,GAAG,OAAI,kBAAC,OAAD,CAAMH,GAAI,OAASG,EAAKC,UAAU,OAAOD","file":"component---src-templates-tag-posts-js-6cb2b1e848d992660152.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport \"../mystyles.scss\"\nimport SEO from \"../components/seo\"\nimport Layout from \"../components/Layout\"\nimport PostCard from \"../components/postcard\"\n\nconst BlogIndex = ({data, pageContext}) => {\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n      <Layout>\n      <SEO title=\"All posts\" />\n      <h1 class=\"title has-text-black\">Posts for tag:  <span class=\"tag is-large is-info\">{pageContext.targetTag}</span></h1>\n      <p class=\"subtitle\">{posts.length + \" posts\"}</p>\n      <hr />\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <PostCard \n            title={title} \n            date={node.frontmatter.date}\n            desc={node.excerpt}\n            tags={node.frontmatter.tags}\n            slug={node.fields.slug}\n          />\n        )\n      })}\n      </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query($targetTag: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: {frontmatter: {tags: {eq: $targetTag}}}, sort: {fields: frontmatter___date, order: DESC}) {\n      edges {\n        node {\n          excerpt(truncate: true)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport \"../mystyles.scss\"\nconst PostCard = (prop) => {\n    // (title, date, desc, tags)\n    return (\n        <div class=\"box\">\n        <article key={prop.title} class=\"content\">\n          \n          <header>\n            <h2 class=\"title\"> \n              <Link style={{ boxShadow: `none` }} to={\"blog/\" + prop.slug}>\n                {prop.title}  \n              </Link>\n            </h2>\n            <h6 class=\"subtitle\">{prop.date}</h6>\n          </header>\n          <section>\n            <p\n              dangerouslySetInnerHTML={{\n                __html: prop.desc,\n              }}\n            />\n          </section>\n        </article>\n        <div class=\"tags\">\n          {prop.tags.map(tag => <Link to={\"tag/\" + tag} className=\"tag\">{tag}</Link>)}\n          </div>\n        </div>\n        \n    )\n}\n\nexport default PostCard"],"sourceRoot":""}